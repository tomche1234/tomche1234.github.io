import{E as a,aj as u,o as r,c,b as n,w as l,a as o,d as _,_ as i}from"./K42HfLKS.js";import{V as m,E as p}from"./BNwfbFId.js";const f={class:"glitch-text"},h=a({__name:"moveToAboutMeButton",setup(d){const s=u();function e(){s.push("/aboutMe")}return(y,t)=>(r(),c("div",null,[n(p,{class:"no-active-state",onClick:e},{default:l(()=>[o("div",f,[t[1]||(t[1]=o("span",null,"See More About Me",-1)),n(m,null,{default:l(()=>t[0]||(t[0]=[_("mdi-arrow-right")])),_:1})])]),_:1})]))}}),b=i(h,[["__scopeId","data-v-87ef5dcd"]]),v={center:"",class:"cyberpunk-text"},g=a({__name:"welcomeHeader",setup(d){return(s,e)=>(r(),c("h1",v,"WELCOME TO MY PAGE"))}}),w=i(g,[["__scopeId","data-v-b4dfd657"]]),x=a({__name:"index",setup(d){return(s,e)=>(r(),c("div",null,[n(w),e[0]||(e[0]=o("div",{class:"passage"}," Hey! I'm Tom, a full-stack engineer with 5+ years of experience, mainly working with TypeScript, .NET Core, and Python. I'm always up for learning something new, which has helped me transition between roles, from backend to full-stack. I've also led a team of engineers. One thing I really believe in is using integration and end-to-end testing to make sure our systems stay reliable and meet the business needs, even when the code changes. ",-1)),n(b,{class:"button"})]))}}),M=i(x,[["__scopeId","data-v-f191e6bc"]]);export{M as default};
